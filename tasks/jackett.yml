---
- name: Create jackett Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ jackett_data_directory }}"

- name: jackett
  docker_container:
    name: jackett
    log_driver: json-file
    log_options:
      max-size: 256m
      max-file: "1"
    image: linuxserver/jackett
    volumes:
      - "{{ jackett_data_directory }}:/config:rw"
      - "/etc/localtime:/etc/localtime:ro"
      - "{{ jackett_torrents_root }}:/downloads"
    env:
      TZ: "{{ ansible_nas_timezone }}"
      PUID: "{{ transmission_user_id }}"
      PGID: "{{ transmission_group_id }}"
    restart_policy: unless-stopped
    recreate: "{{ 'yes' if docker_recreate else 'no' }}"
    network_mode: "{{ 'container:' + proxy_container if jackett_proxy else 'None' }}"
    healthcheck:
      test: ["CMD", "curl", "--fail", "-4", "{{ health_check_url }}"]
      interval: 1m
      timeout: 5s
      retries: 2
      start_period: 90s 
    memory: 256m
    labels:
      autoheal: "true"
      traefik.enable: "{{ jackett_available_externally }}"
      traefik.http.routers.jackett.entrypoints: "web,websecure"
      traefik.http.routers.jackett.rule: "Host(`{{ jackett_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.jackett.tls.certresolver: "letsencrypt"
      traefik.http.routers.jackett.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.jackett.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.jackett.loadbalancer.server.port: "9117"
