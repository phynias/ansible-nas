---
- name: Create Lidarr Directory
  file:
    path: "{{ lidarr_data_directory }}"
    state: directory

- name: Lidarr Docker Container
  docker_container:
    name: lidarr
    log_driver: json-file
    log_options:
      max-size: 256m
      max-file: "1"
    image: linuxserver/lidarr
    pull: true
    volumes:
      - "{{ lidarr_music_directory }}:/music:rw"
      - "{{ lidarr_downloads_directory }}/music:/downloads/music:rw"
      - "{{ lidarr_data_directory }}:/config:rw"
    networks:
      - name: "{{ nas_bridge_network }}"
    recreate: "{{ 'yes' if docker_recreate else 'no' }}"
    env:
      TZ: "{{ ansible_nas_timezone }}"
      PUID: "{{ lidarr_user_id }}"
      PGID: "{{ lidarr_group_id }}"
    restart_policy: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "-4", "{{ health_check_url }}"]
      interval: 1m
      timeout: 5s
      retries: 2
      start_period: 90s
    memory: 1g
    labels:
      traefik.enable: "{{ lidarr_available_externally }}"
      traefik.http.routers.lidarr.entrypoints: "web,websecure"
      traefik.http.routers.lidarr.rule: "Host(`{{ lidarr_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.lidarr.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.lidarr.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.lidarr.loadbalancer.server.port: "8686"
      traefik.http.routers.lidarr.middlewares: "{{ port|default(omit) if nas_auth_middleware is not defined else nas_auth_middleware }}"
      autoheal: "true"
