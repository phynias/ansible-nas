---
- name: Create Radarr Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ radarr_data_directory }}"

- name: Radarr
  register: docker_container_output
  docker_container:
    name: radarr
    log_driver: json-file
    log_options:
      max-size: 256m
      max-file: 1
    image: linuxserver/radarr:nightly
    pull: true
    volumes:
      - "{{ radarr_movies_directory }}:/movies:rw"
      - "{{ radarr_download_directory }}/movies:/downloads/movies:rw"
      - "{{ radarr_data_directory }}:/config:rw"
      - "{{ nas_root }}/tools:/tools:ro"
    env:
      TZ: "{{ ansible_nas_timezone }}"
      PUID: "{{ radarr_user_id }}"
      PGID: "{{ radarr_group_id }}"
    restart_policy: unless-stopped
    recreate: "{{ 'yes' if docker_recreate else 'no' }}"
    network_mode: "{{ 'container:' + proxy_container if radarr_proxy else 'None' }}"
    memory: 1g
    healthcheck:
      test: ["CMD", "curl", "--fail", "-4", "{{ health_check_url }}"]
      interval: 1m
      timeout: 5s
      retries: 2
      start_period: 90s
    labels:
      traefik.enable: "{{ radarr_available_externally }}"
      traefik.http.routers.radarr.entrypoints: "web,websecure"
      traefik.http.routers.radarr.rule: "Host(`{{ radarr_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.radarr.tls.certresolver: "letsencrypt"
      traefik.http.routers.radarr.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.radarr.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.radarr.loadbalancer.server.port: "7878"
      autoheal: "true"

#- debug: msg="{{ docker_container_output }}"
#  when: docker_container_output is defined

