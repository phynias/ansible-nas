---
- name: Create Transmission Directories
  file:
    path: "{{ item }}"
    state: directory
    # mode: 0755
  with_items:
    - "{{ transmission_config_directory }}"
    - "{{ transmission_download_directory }}"
    - "{{ transmission_watch_directory }}"

- name: Transmission Docker Container
  docker_container:
    name: transmission
    image: linuxserver/transmission
    pull: true
    volumes:
      - "{{ transmission_config_directory }}:/config:rw"
      - "{{ transmission_download_directory }}:/downloads:rw"
      - "{{ transmission_watch_directory }}:/watch:rw"
    env:
#      TRANSMISSION_HOME: "/config"
#      TRANSMISSION_DOWNLOAD_DIR: "/downloads"
#      TRANSMISSION_INCOMPLETE_DIR: "/downloads/.incomplete"
#      TRANSMISSION_WATCH_DIR: "/watch"
      TZ: "{{ transmission_timezone }}"
      PUID: "{{ transmission_user_id }}"
      PGID: "{{ transmission_group_id }}"
      DOCKER_MODS: "tzinm/remove-finished:latesdocker t"
      AUTOREMOVE: "yes"
      CRONDATE: "daily"
    restart_policy: unless-stopped
    recreate: "{{ 'yes' if docker_recreate | default('no') }}"
    network_mode: "{{ 'container:' + proxy_container if sabnzbd_proxy else 'None' }}"
    memory: 1g
    healthcheck:
      test: ["CMD", "curl", "--fail", "-4", "{{ health_check_url }}"]
      interval: 1m
      timeout: 5s
      retries: 2
      start_period: 90s
    labels:
      traefik.enable: "{{ transmission_available_externally }}"
      traefik.http.routers.transmission.entrypoints: "web,websecure"
      traefik.http.routers.transmission.rule: "Host(`{{ transmission_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.transmission.tls.certresolver: "letsencrypt"
      traefik.http.routers.transmission.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.transmission.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.transmission.loadbalancer.server.port: "9091"
      autoheal: "true"
