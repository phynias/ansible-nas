---
- name: Create scrutiny Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ scrutiny_config_directory }}"
- shell: ls -d -- /dev/sd*[!0-9]
  register: _output
- name: Template scrutiny files
  template:
    src: "{{ item }}"
    dest: "{{ scrutiny_config_directory }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
  vars:
    devList: "{{ _output.stdout_lines|join(',') }}"
  with_fileglob: "files/*.j2"
- name: scrutiny Docker Container
  docker_container:
    name: scrutiny
    image: ghcr.io/analogj/scrutiny
    pull: true
    networks:
      - name: "{{ nas_bridge_network }}"
    capabilities:
      - SYS_RAWIO
      - SYS_ADMIN
    devices: "{{ _output.stdout_lines }}"
    volumes:
      - "{{ scrutiny_config_directory }}:/opt/scrutiny/config:rw"
      - "/run/udev:/run/udev:ro"
    restart_policy: unless-stopped
    recreate: "{{ 'yes' if docker_recreate else 'no' }}"
    #    env:
    #      TZ: "{{ ansible_nas_timezone }}"
    #      DEBUG: "true"
    #      SCOLLECTOR_LOG_FILE: /tmp/collector.log
    #      SCRUTINY_LOG_FILE: /tmp/web.log
    memory: 512m
    healthcheck:
      test: ["CMD", "curl", "-L", "--fail", "-4", "localhost:{{ scrutiny_port }}/web"]
      interval: 1m
      timeout: 5s
      retries: 2
      start_period: 90s
    labels:
      traefik.enable: "{{ scrutiny_available_externally }}"
      traefik.http.routers.scrutiny.entrypoints: "web,websecure"
      traefik.http.routers.scrutiny.rule: "Host(`{{ scrutiny_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.scrutiny.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.scrutiny.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.scrutiny.loadbalancer.server.port: "{{ scrutiny_port }}"
