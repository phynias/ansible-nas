---
- name: Create Sonarr Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ sonarr_data_directory }}"

- name: Sonarr
  docker_container:
    name: sonarr
    image: linuxserver/sonarr
    log_driver: json-file
    log_options:
      max-size: 256m
      max-file: "1"
    pull: true
    volumes:
      - "{{ sonarr_tv_directory }}:/tv:rw"
      - "{{ sonarr_download_directory }}:/downloads:rw"
      - "{{ sonarr_data_directory }}:/config:rw"
      - "{{ nas_root }}/tools:/tools:ro"
    env:
      TZ: "{{ ansible_nas_timezone }}"
      PUID: "{{ sonarr_user_id }}"
      PGID: "{{ sonarr_group_id }}"
    restart_policy: unless-stopped
    recreate: "{{ 'yes' if docker_recreate else 'no' }}"
    memory: 1g
    network_mode: "{{ 'container:' + proxy_container if sonarr_proxy else 'None' }}"
    healthcheck:
      test: ["CMD", "curl", "--fail", "-4", "{{ health_check_url }}"]
      interval: 1m
      timeout: 5s
      retries: 2
      start_period: 90s
    labels:
      traefik.enable: "{{ sonarr_available_externally }}"
      traefik.http.routers.sonarr.entrypoints: "web,websecure"
      traefik.http.routers.sonarr.rule: "Host(`{{ sonarr_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.sonarr.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.sonarr.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.sonarr.loadbalancer.server.port: "8989"
      #traefik.http.routers.sonarr.middlewares: "google-oauth@file"
      autoheal: "true"
