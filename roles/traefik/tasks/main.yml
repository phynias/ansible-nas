---
- name: Create Traefik Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ traefik_data_directory }}"
    - "{{ traefik_data_directory }}/letsencrypt"
    - "{{ traefik_data_directory }}/certs_dump"

- name: check if config is a dir
  stat:
    path: "{{ traefik_data_directory }}/traefik.toml"
  register: register_check

- name: Delete content & directory
  file:
    state: absent
    path: "{{ traefik_data_directory }}/traefik.toml"
  when: register_check.stat.exists

- name: Template Traefik config.toml
  template:
    src: traefik.toml
    dest: "{{ traefik_data_directory }}/traefik.toml"
  register: template_config

- name: Template Traefik middleware.yml
  template:
    src:  middleware.yml
    dest: "{{ traefik_data_directory }}/rules/middleware.yml"

- name: Template Traefik ha.toml
  template:
    src:  ha.toml
    dest: "{{ traefik_data_directory }}/rules/ha.toml"

- name: Setup traefik docker-compose.yml
  template:
    src: templates/docker-compose.yml.j2
    dest: "{{ role_path }}/docker-compose.yml"

- name: Run docker compose pull
  shell: "docker compose pull --ignore-pull-failures || true"
  register: shell_output
  args:
    chdir: "{{ role_path }}"

- name: Run docker compose build
  shell: "docker compose build"
  register: shell_output
  args:
    chdir: "{{ role_path }}"

- debug: var=shell_output.stdout

- name: Deploy traefik Docker Compose stack
  community.docker.docker_compose_v2:
    remove_orphans: true
    recreate: "{{ 'always' if docker_recreate else 'auto' }}"
    project_src: "{{ role_path }}"
    files:
    - docker-compose.yml
  register: shell_output

- name: Remove docker-compose.yml
  file:
    path: "{{ role_path }}/docker-compose.yml"
    state: absent
