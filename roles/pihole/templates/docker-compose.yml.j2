version: "3.3"

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  dhcp-relay:
    container_name: dhcp-relay
    build:
      context: .
      dockerfile: dhcp-relay.dockerfile
      args:
        INTERFACE_UPSTREAM: "{{ pihole_int.stdout }}"
        INTERFACE_DOWNSTREAM: "{{ default_int.stdout }}""
        SERVER: "{{ pihole_hostname }}.{{ ansible_nas_domain }}"
    image: local/dhcp-relay-arm32v7:latest
    restart: always
    network_mode: host
    depends_on:
      - pihole
    cap_add:
      - NET_ADMIN
    dns:
      - "{{ pihole_hostname }}.{{ ansible_nas_domain }}" #tell container to look at pihole container for dns
    dns_search:
      - .local #search locally for .local domains not the internet
      - ".{{ ansible_nas_domain }}" #search locally for .local domains not the internet

  pihole:
    container_name: pihole
    image: phynias/pihole-regex:latest
    env_file: ./.env
    hostname: "{{ pihole_hostname }}.{{ ansible_nas_domain }}"
    networks:
      - default
      - piholedhcp
    ports:
      - "53:53/tcp" #dns
      - "53:53/udp" #dns
      #- "67:67/udp" #dhcp server
      #- "80:80/tcp"
      #- "443:443/tcp"
    expose:
     - 80
     - 443
    environment:
      TZ: 'America/Los_Angeles'
      WEBPASSWORD: ${WEBPASSWORD}
      DNS1: 1.1.1.1
      DNS2: 9.9.9.9
      ServerIP: ${HOST_IP}
      VIRTUAL_HOST: ${URL0_SAN}
      DNSMASQ_LISTENING: all
    # Volumes store your data between container upgrades
    volumes:
       - ./data/etc-pihole/:/etc/pihole/
       - ./data/etc-dnsmasq.d/:/etc/dnsmasq.d/
    dns:
      - 127.0.0.1
      - 1.1.1.1
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: always
    labels:
      - "traefik.enable=true"
      - "autoheal=true"
      - "traefik.enable={{ pihole_available_externally }}"
      - "traefik.http.routers.pihole.rule=Host(`{{ pihole_hostname }}.{{ ansible_nas_domain }}`)"
      - "traefik.http.routers.pihole.tls.certresolver=letsencrypt"
      - "traefik.http.routers.pihole.tls.domains[0].main={{ ansible_nas_domain }}"
      - "traefik.http.routers.pihole.tls.domains[0].sans=*.{{ ansible_nas_domain }}"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"

networks:
    piholedhcp:
        external: true
