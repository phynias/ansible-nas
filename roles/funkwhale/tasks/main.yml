---
- name: Create funkwhale Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ funkwhale_data_directory }}"

- name: funkwhale Docker Container
  docker_container:
    name: funkwhale
    log_driver: json-file
    log_options:
      max-size: 256m
      max-file: "1"
    image: funkwhale/all-in-one
    volumes:
      - "{{ funkwhale_music_directory }}:/music:ro"
      - "{{ funkwhale_books_directory }}:/books:ro"
      - "{{ funkwhale_podcasts_directory}}:/podcasts:ro"
      - "{{ funkwhale_playlists_directory }}:/playlists:ro"
      - "{{ funkwhale_data_directory }}:/data"
    restart_policy: unless-stopped
    recreate: "{{ 'yes' if docker_recreate else 'no' }}"
    env:
      TZ: "{{ ansible_nas_timezone }}"
      PUID: "{{ funkwhale_user_id }}"
      PGID: "{{ funkwhale_group_id }}"
      NESTED_PROXY: "1"
      FUNKWHALE_HOSTNAME: "{{ funkwhale_hostname }}.{{ ansible_nas_domain }}"
    memory: 1g
    ports:
      - "{{ funkwhale_port }}:80"
    labels:
      traefik.enable: "{{ funkwhale_available_externally }}"
      traefik.passHostHeader: "true"
      traefik.http.routers.funkwhale.entrypoints: "websecure,websecure-ext"
      traefik.http.routers.funkwhale.rule: "Host(`{{ funkwhale_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.funkwhale.tls.certresolver: "letsencrypt"
      traefik.http.routers.funkwhale.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.funkwhale.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.funkwhale.loadbalancer.server.port: "80"
      com.centurylinklabs.watchtower.enable: "true"
      autoheal: "true"


