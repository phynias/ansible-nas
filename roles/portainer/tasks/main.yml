---
- name: Create Portainer Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ portainer_data_directory }}"
#- name: Portainer Agent Container
#  docker_container:
#    name: portainer-agent
#    log_driver: json-file
#    log_options:
#      max-size: 256m
#      max-file: "1"
#    image: portainer/agent:latest
#    pull: true
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#      - "/var/lib/docker/volumes:/var/lib/docker/volumes"
#      - "/:/host:ro"
#      - "/etc/timezone:/etc/timezone:ro"
#    restart_policy: unless-stopped
#    recreate: "{{ 'yes' if docker_recreate else 'no' }}"
#    memory: 64m
- name: Portainer Docker Container
  docker_container:
    name: portainer
    image: portainer/portainer-ce
    networks:
      - name: "{{ nas_bridge_network }}"
    pull: true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/lib/docker/volumes:/var/lib/docker/volumes"
      - "{{ portainer_data_directory }}:/data:rw"
      - "/etc/timezone:/etc/timezone:ro"
      #    command: "-H tcp://agent:9001 --tlsskipverify"
      #    ports:
      #      - "{{ portainer_port }}:9000"
    restart_policy: unless-stopped
    recreate: "{{ 'yes' if docker_recreate else 'no' }}"
    memory: 64m
    #    links:
    #      - "portainer-agent:agent"
    labels:
      traefik.enable: "{{ portainer_available_externally }}"
      traefik.http.routers.portainer.entrypoints: "web,websecure"
      traefik.http.routers.portainer.rule: "Host(`{{ portainer_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.portainer.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.portainer.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.portainer.loadbalancer.server.port: "9000"
