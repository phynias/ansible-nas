---
- name: build webhookd image
  docker_image:
    name: webhookd
    build:
      path: "{{ role_path }}/files/"
      args:
        UID: "{{ webhookd_user_id }}"
        GID: "{{ webhookd_group_id }}"
    source: build
    force_source: true
    state: present
- name: webhookd Docker Container
  docker_container:
    name: webhookd
    image: webhookd
    networks:
      - name: "{{ nas_bridge_network }}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "{{ webhookd_scripts_directory }}:/tools"
      - "{{ webhookd_plex_directory }}:/plexserver"
      - "{{ movies_root }}:/movies"
      - "{{ tv_root }}:/tv"
    restart_policy: unless-stopped
    recreate: "{{ 'yes' if docker_recreate else 'no' }}"
    env:
      #      WHD_LISTEN_ADDR: ":8787"
      TZ: "{{ ansible_nas_timezone }}"
      PUID: "{{ webhookd_user_id }}"
      PGID: "{{ webhookd_group_id }}"
    user: "{{ webhookd_user_id }}"
    memory: 128m
    healthcheck:
      test: ["CMD", "curl", "-s", "-L", "127.0.0.1:8080/health"]
      interval: 1m
      timeout: 5s
      retries: 2
      start_period: 90s
    command: webhookd --scripts=/tools/
    labels:
      traefik.enable: "{{ webhookd_available_externally }}"
      traefik.http.routers.webhookd.entrypoints: "web,websecure"
      traefik.http.routers.webhookd.rule: "Host(`{{ webhookd_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.webhookd.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.webhookd.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.webhookd.loadbalancer.server.port: "8080"
      com.centurylinklabs.watchtower.enable: "false"
